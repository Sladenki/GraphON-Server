import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import * as TelegramBot from 'node-telegram-bot-api';

@Injectable()
export class TelegramBotService implements OnModuleInit {
  public bot: TelegramBot;
  private WEB_APP_URL: string;
  private SERVER_URL: string;

  constructor(
    private readonly configService: ConfigService,
  ) {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞
    const token = this.configService.get<string>('BOT_TOKEN');
    // const token = "7335134596:AAFu23SLsADju1xxcG9bqecwFXoi8MgZeBs"
    this.bot = new TelegramBot(token, { polling: true });

    console.log('Bot instance created');

    // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 
    const webAppString = this.configService.get<string>('WEB_APP_URL');
    this.WEB_APP_URL = webAppString

    // –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const authLoginString = this.configService.get<string>('SERVER_URL');
    this.SERVER_URL = authLoginString
  }

  onModuleInit() {
    console.log('Bot initialized');
    // –î–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º polling
    setTimeout(() => {
      this.handleStartCommand();
    }, 1000); // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async getUserProfilePhotos(id: number) {
    return await this.bot.getUserProfilePhotos(id);
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
  handleStartCommand() {
    this.bot.onText(/\/start/, (msg) => {
      const chatId = msg.chat.id;
      this.bot.sendMessage(chatId, 
        'üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GraphON!* üåü\n\n' +
        '–í–∞—à –ª–∏—á–Ω—ã–π –≥–∏–¥ –ø–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É –≤–Ω–µ—É—á–µ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n\n' +
        '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è" ‚¨áÔ∏è\n\n' +
        '---\n\n' +
        'üìå *–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã –ø–æ–ª—É—á–∏–º –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏?*\n\n' +
        '- *Telegram ID*\n' +
        '- *–ò–º—è*\n' +
        '- *–§–∞–º–∏–ª–∏—é*\n' +
        '- *–Æ–∑–µ—Ä–Ω–µ–π–º*\n' +
        '- *–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è*', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                web_app: {
                  url: this.WEB_APP_URL, 
                },
              },
            ],
            [
              {
                text: 'üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è',
                login_url: {
                  url: `${this.SERVER_URL}/auth/telegram/callback`, 
                },
              },
            ],            
            [
              {
                text: 'üì¢ Telegram –∫–∞–Ω–∞–ª',
                url: 'https://t.me/graph_ON', 
              },
            ],

          ],
        },
      });
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  sendMessage(chatId: number, message: string) {
    this.bot.sendMessage(chatId, message);
  }
}
