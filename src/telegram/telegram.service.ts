import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import * as TelegramBot from 'node-telegram-bot-api';
import { UserService } from 'src/user/user.service';
import { getCopyrightConfig } from 'src/config/copyright.config';

@Injectable()
export class TelegramBotService implements OnModuleInit {
  public bot: TelegramBot;
  private WEB_APP_URL: string;
  private SERVER_URL: string;
  private SUPPORT_URL: string;
  private COPYRIGHT_PDF_PATH: string;

  constructor(
    private readonly configService: ConfigService,
    private readonly userService: UserService,
  ) {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞
    const token = this.configService.get<string>('BOT_TOKEN');
    // const token = "7335134596:AAFu23SLsADju1xxcG9bqecwFXoi8MgZeBs"
    this.bot = new TelegramBot(token, { polling: true });

    console.log('Bot instance created');

    // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 
    const webAppString = this.configService.get<string>('WEB_APP_URL');
    this.WEB_APP_URL = webAppString

    // –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const authLoginString = this.configService.get<string>('SERVER_URL');
    this.SERVER_URL = authLoginString
    
    // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
    const supportUrlString = this.configService.get<string>('SUPPORT_URL');
    this.SUPPORT_URL = supportUrlString

    // –ü—É—Ç—å –∫ PDF —Ñ–∞–π–ª—É —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    const copyrightConfig = getCopyrightConfig(this.configService);
    this.COPYRIGHT_PDF_PATH = copyrightConfig.pdfPath;
  }

  onModuleInit() {
    console.log('Bot initialized');
    // –î–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º polling
    setTimeout(() => {
      this.setupBotCommands();
      this.handleStartCommand();
      this.handleAuthCommand();
      this.handleSupportCommand();
      this.handleCallbackQueries();
    }, 1000); // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async getUserProfilePhotos(id: number) {
    return await this.bot.getUserProfilePhotos(id);
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –º–µ–Ω—é)
  async setupBotCommands() {
    try {
      await this.bot.setMyCommands([
        {
          command: 'start',
          description: 'üåü –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        },
        {
          command: 'auth',
          description: 'üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'
        },
        {
          command: 'support',
          description: 'üõ† –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        }
      ]);
    } catch (error) {
      console.error('Error setting bot commands:', error);
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
  handleStartCommand() {
    this.bot.onText(/\/start(.*)/, async (msg, match) => {
      const chatId = msg.chat.id;
      const parameter = match[1]?.trim(); // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ—Å–ª–µ /start
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä "auth", —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      if (parameter === 'auth') {
        await this.sendAuthMessage(chatId);
        return;
      }

      // –û–±—ã—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      this.bot.sendMessage(chatId, 
        'üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GraphON!* üåü\n\n' +
        '–í–∞—à –ª–∏—á–Ω—ã–π –≥–∏–¥ –ø–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É –≤–Ω–µ—É—á–µ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n\n', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                web_app: {
                  url: this.WEB_APP_URL,
                  hide_webapp_header: true
                },
              },
            ],        
            [
              {
                text: 'üì¢ Telegram –∫–∞–Ω–∞–ª',
                url: 'https://t.me/graph_ON', 
              },
            ],
          ],
        },
      });
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /auth
  handleAuthCommand() {
    this.bot.onText(/\/auth/, async (msg) => {
      const chatId = msg.chat.id;
      await this.sendAuthMessage(chatId);
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /support
  handleSupportCommand() {
    this.bot.onText(/\/support/, (msg) => {
      const chatId = msg.chat.id;
      this.sendSupportMessage(chatId);
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
  handleCallbackQueries() {
    this.bot.on('callback_query', async (callbackQuery) => {
      const chatId = callbackQuery.message.chat.id;
      const data = callbackQuery.data;

      if (data === 'show_copyright_agreement') {
        await this.sendCopyrightAgreement(chatId);
      } else if (data === 'accept_copyright_agreement') {
        await this.acceptCopyrightAgreement(chatId, callbackQuery.from.id);
      } else if (data === 'proceed_to_auth') {
        await this.sendAuthMessage(chatId);
      }

      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
      await this.bot.answerCallbackQuery(callbackQuery.id);
    });
  }

  // –û—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  async sendAuthMessage(chatId: number) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
      const user = await this.userService.findByTelegramId(chatId);
      
      if (user && user.copyrightAgreementAccepted) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–Ω—è–ª —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        this.bot.sendMessage(chatId, 
          'üîê *–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GraphON*\n\n' +
          '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚¨áÔ∏è\n\n' +
          '---\n\n' +
          'üìå *–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã –ø–æ–ª—É—á–∏–º –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏?*\n\n' +
          '- *Telegram ID*\n' +
          '- *–ò–º—è*\n' +
          '- *–§–∞–º–∏–ª–∏—é*\n' +
          '- *–Æ–∑–µ—Ä–Ω–µ–π–º*\n' +
          '- *–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è*', 
          {
          parse_mode: "Markdown",
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: 'üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è',
                  login_url: {
                    url: `${this.SERVER_URL}/auth/telegram/callback`, 
                  },
                },
              ],
            ],
          },
        });
      } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏–Ω—è–ª —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ
        this.bot.sendMessage(chatId, 
          'üìã *–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö*\n\n' +
          '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö.\n\n' +
          '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –∏ –ø—Ä–∏–º–∏—Ç–µ —É—Å–ª–æ–≤–∏—è.', 
          {
          parse_mode: "Markdown",
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: 'üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
                  callback_data: 'show_copyright_agreement'
                },
              ],
            ],
          },
        });
      }
    } catch (error) {
      console.error('Error in sendAuthMessage:', error);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
      this.bot.sendMessage(chatId, 
        'üìã *–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö*\n\n' +
        '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö.\n\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –∏ –ø—Ä–∏–º–∏—Ç–µ —É—Å–ª–æ–≤–∏—è.', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
                callback_data: 'show_copyright_agreement'
              },
            ],
          ],
        },
      });
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö
  async sendCopyrightAgreement(chatId: number) {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª
      await this.bot.sendDocument(chatId, this.COPYRIGHT_PDF_PATH, {
        caption: 'üìã *–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö*\n\n' +
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –≤—ã—à–µ.\n\n' +
                '–ü–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ".',
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
                callback_data: 'accept_copyright_agreement'
              },
            ],
          ],
        },
      });
    } catch (error) {
      console.error('Error sending copyright agreement:', error);
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      this.bot.sendMessage(chatId, 
        'üìã *–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö*\n\n' +
        '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç.\n\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üí¨ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É',
                url: this.SUPPORT_URL,
              },
            ],
          ],
        },
      });
    }
  }

  // –ü—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ–± –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö
  async acceptCopyrightAgreement(chatId: number, telegramId: number) {
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∏–Ω—è—Ç—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º
      await this.userService.acceptCopyrightAgreement(telegramId);
      
      this.bot.sendMessage(chatId, 
        '‚úÖ *–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!*\n\n' +
        '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üîê –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é',
                callback_data: 'proceed_to_auth'
              },
            ],
          ],
        },
      });
    } catch (error) {
      console.error('Error accepting copyright agreement:', error);
      this.bot.sendMessage(chatId, 
        '‚ùå *–û—à–∏–±–∫–∞*\n\n' +
        '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.\n\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.', 
        {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üí¨ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É',
                url: this.SUPPORT_URL,
              },
            ],
          ],
        },
      });
    }
  }

  // –û—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ
  sendSupportMessage(chatId: number) {
    this.bot.sendMessage(chatId, 
      'üõ† *–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ GraphON*\n\n' +
      'üìû *–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å?*\n\n' +
      '‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –≤ —á–∞—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n\n', 
      {
      parse_mode: "Markdown",
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: 'üí¨ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
              url: this.SUPPORT_URL, 
            },
          ],
        ],
      },
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  sendMessage(chatId: number, message: string) {
    this.bot.sendMessage(chatId, message);
  }
}
